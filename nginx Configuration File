 
proxy_cache_path your/path/to/cache levels=1:2 keys_zone=my_cache:10m max_size=10g  # cache location
                use_temp_path=off;

upstream test {
  least_conn;
  server 127.0.0.1:3000;
  server 127.0.0.2:3000;
  server 127.0.0.3:3000;
  server 127.0.0.4:3000;
}

server {
  listen 80;

  location / {
        proxy_cache my_cache;
  location ~* \.(css|js|gif|jpe?g|png|html)$ {
    expires 168h;                                        # cache timing
    
  }
    proxy_pass http://test;
  }

}

# Splitting cache across multiple hard-drives


#proxy_cache_path /path/to/hdd1 levels=1:2 keys_zone=my_cache_hdd1:10m
#                 max_size=10g inactive=60m use_temp_path=off;
#proxy_cache_path /path/to/hdd2 levels=1:2 keys_zone=my_cache_hdd2:10m
#                 max_size=10g inactive=60m use_temp_path=off;

#split_clients $request_uri $my_cache {
#              50%          “my_cache_hdd1”;
#             50%          “my_cache_hdd2”;
#}

#server {
    # ...
#    location / {
#        proxy_cache $my_cache;
#        proxy_pass http://my_upstream;
#    }
#}

# Advanced cache configuration with multiple features
#http {
#    proxy_cache_path  /data/nginx/cache  levels=1:2    keys_zone=STATIC:10m
#    inactive=24h  max_size=1g;
#    server {
#        location / {
#            proxy_pass             http://1.2.3.4;
#            proxy_set_header       Host $host;
#            proxy_buffering        on;
#            proxy_cache            STATIC;
#            proxy_cache_valid      200  1d;
#            proxy_cache_use_stale  error timeout invalid_header updating
#                                   http_500 http_502 http_503 http_504;
#        }
#    }
#}